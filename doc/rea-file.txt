What's in a .rea file?
----------------------

Contact: Andreas Kloeckner <andreas@mcs.anl.gov>

This file is parsed by reannotate, the automatic .rea file annotator.
For its sake, please leave the BEGIN_XXX and END_XXX annotations in
place.

The automatic REA file processors generally work best if there is a
unique symbolic name after the number of the parameter.

You may use enumerations "1,2,3,4" and ranges "11..17" to document
whole slews of parameters at once.

1) Real parameters
------------------

In a typical .rea, subtract 4 from the line number to obtain the parameter
number.

BEGIN_REAL_PARAMETERS

1 CSPEED The speed of light, in m/s.

  If scale-free equations are used, this will be just 1.
  Usually, CSPEED = 1/sqrt(PERMIT*PERMEA)  
  Physical value: 0.299792E+18

2 PERMIT Vacuum permittivity (\epsilon_0)

  If scale-free equations are used, this will be just 1.
  Physical value: 0.885420E-20

3 PERMEA Vacuum permeability (\mu_0)

  If scale-free equations are used, this will be just 1.

4 RELPERMIT Relative permittivity (\epsilon_r)

  1 for vacuum.
  This should really be a material property.

5 RELPERMEA Relative permeability (\mu_r)

  1 for vacuum.
  This should really be a material property.

6 GAMMA_P
7 FREQ_P
8 GAMMA_P
9 FREQ_P
10 FINTIME Finish after this much time has passed
11 NSTEPS Total number of steps to take
12 DT Size of a timestep
13 IOCOMM Step Interval at which console status is printed

  If this is set to 5, some statistics are printed every 5 steps.

14 IOTIME
15 IOSTEP  Step Interval at which output is produced

  If this is set to 5, output is written every 5 steps.

16 EQTYPE     
17 AXIS
18 GRID
19 INTYPE
20 NORDER
21 DIVERGENCE
22 HELMHOLTZ
23 NPSCAL
24 TOLREL
25 TOLABS
26 COURANT
27 TORDER
28 TMESH
29 MAXCGHELM
30 PoPRESSURE
31 GAS CONS R 
32 Lo Ma GRAV
33 MXGEOM
34 MAXNEW
35 ???
36 XMAGNET
37 NGRIDS 
38 NORDER2 
39 NORDER3 
40 NORDER4 
41 NORDER5 
42 SSFSLENG 
43 VHScaleFac
44 POISSONRA
45 FSDTFAC
46 IRSTART
47 CNFAC
48 PGEOM
49 MIXLFAC
50 MAXCGFS
51 ???
52 HISTEP
53 HISTIME
54 RAMP_STEPS
55 ???
56 ???

--- SOURCE BLOCK 1 (Offsets to base in parentheses)

57 TMODTYP Temporal source modulation (choices: 0=off,1=on,..,5)

  0: Constant off
  1: Constant on
  2: Gaussian pulse at T0=P64, SIGMA=P65
  3: Cosine(2*pi*f*T) f=P64
  4: Sequence of pulses of pulse duration P64 and phase duration P65.

58 SMODTYP Spatial source modulation (choices: 1=on,..,4)

  1: Constant 1
  2: Gaussian pulse
     localized at (P66..P68) initially
     travelling (P69..P71) per time unit
     with standard deviations (P72..P74)
       if one of the standard deviations is zero,
       the pulse is not localized in that direction
  3: Plane wave with wave vector (P66..P68)
     Freqency in P69
  4: APS source term
     Sigma of Z-Axis Gaussian in P66.
       If P66=0, no temporal/z modulation.
     Speed of bunch in P67 (in speed of light units)
       Must be != 0, even if no temporal/z modulation.
     Distance from center in P68.
     Sigma of radial Gaussian in P69.
     Number m of the azimuthal mode in P70.

59 SRCSCAL Source scaling

  All fields (except APS) are normalized so that their peak value is 1.
  This field specifies additional scaling.

60 FLDCHS Source field selector (bitfield) (1:hx,3:hz,4:ex,6:ez)

61 RESERVED Source: Reserved for future use

62 TSTART Source: starting time
63 TSTOP Source: stopping time

  The source will only operate between TSTART and TSTOP.

64,65 TDATA Source: various time modulation data

66..75 SDATA Source: various spatial modulation data

--- END SOURCE 1 DATA

76 ???

77 PMLTHICK : thickness of the PML in levels

  Choose 1 if unsure.

78 PMLORDER : polynomial order of the grading of the PML parameter sigma
  
  Choose 2 if unsure.

79 PMLREFERR : PML reflection error

  This specifies how much of the incident signal is permitted to be
  reflected by the PML. See the term R(0) in formula (7.57) of the
  Taflove book.

  Choose 1e-5 if unsure.

80 unused
81 ???
82 ???
83 ???
84 ???
85 permit: output
86 permea: output

87..89 OUTPUT Output hx..hz
90..92 OUTPUT Output ex..ez

  Whether to output these fields.
  Currently, this does not control the (via-Python) VTK output.
  
93 usrres1 reserved for use by .usr code
94 usrres2 reserved for use by .usr code
95 usrres3 reserved for use by .usr code

96 ifblockoutput 0: produce output 1: no output

  Globally disable/enable all field output.

97 ifarpack 0: false 1: true

  Whether to use ARPACK for eigenvalue calculations.
  ARPACK does not compute the complete set of eigenvalues,
  but it is much faster.

  This is only relevant if IFEIG is set.

98 stepsize error tolerance                    
99 ifdtctl 0: false 1:true
100 ifscat 
101 ifdrude 0: false 1: true
102 ifsol 0: false 1: true

  Whether to use the given analytic solution given in the function usrsol.

  "Use" means as IC and BC, and also for comparison 
  (i.e. error computation).

103 ifvtk 0: false 1: true

  0: Write "old" PostX .fldNNN format
  1: Write vtkNNNN.dat files for postprocessing into VTK files 
     by post2vtk

END_REAL_PARAMETERS

2) Logical switches
-------------------

BEGIN_SWITCHES

1 IFFLOW
2 IFHEAT
3 IFTRAN
4 IFSRC

  Whether to use the source term given in usersrc. (cf. .usr file)

5 IFCENTRAL

  Whether to use the central flux.

6 IFUPWIND

  Whether to use the upwind flux.

7 IFTM (2D only)

  Propagate TM wave (Hx,Hy,Ez).
  
8 IFTE (2D only)

  Propagate TE wave (Ex,Ey,Hz).

9 IFDEALIAS
10 IFRK4

  Whether to use the fourth-order Runge-Kutta time integrator.

11 IFEXP

  Whether to use the (currently non-working) Arnoldi-based time
  integrator.

12 IFEIG
13 IFNM

  Whether to run a "nanoscale" simulation.
  Nanoscale does weird things to the code that I don't understand.
  I gather that it introduces a more "reasonable" (?) scaling
  of small problems.
  Somebody who knows what this changes should elaborate here,
  and possibly list *all* the consequences of this switch.
  (Hint, Hint, Misun. ;-)

END_SWITCHES
