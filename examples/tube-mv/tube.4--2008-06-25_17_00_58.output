0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
  WDSIZE: 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
 Number of Processors :: 16
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 DEBUG: moving window? movwin= 0
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1

 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: calling moving window version of data read
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T

 DEBUG: moving window? movwin= 0
 DEBUG: READATW CALLED! ifmovw= T
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
  Beginning session:
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
  /home/gcobb/nekcem/nekcem/examples/tube-mv/tube.rea                           
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T

 
 readat time :: 0.495764705887857815E-05  seconds
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
10 :: FATAL :: 16,0 ==> num_nodes != 2^k!
5 :: FATAL :: 16,0 ==> num_nodes != 2^k!
13 :: FATAL :: 16,0 ==> num_nodes != 2^k!
1 :: FATAL :: 16,0 ==> num_nodes != 2^k!
 DEBUG: moving window version! ifmovw= T
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 DEBUG: moving window version! ifmovw= T
3 :: FATAL :: 16,0 ==> num_nodes != 2^k!
 DEBUG: moving window version! ifmovw= T
 DEBUG: moving window version! ifmovw= T
 DEBUG: moving window version! ifmovw= T
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
4 :: FATAL :: 16,0 ==> num_nodes != 2^k!
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 THIS is ifgtp: F F
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
 DEBUG: moving window version! ifmovw= T
 vars: nwin2d= 9  mw2= 18  mw1= 0.000000000000000000E+00  NELGT_MW= 900  inc= 8
2 :: FATAL :: 16,0 ==> num_nodes != 2^k!
7 :: FATAL :: 16,0 ==> num_nodes != 2^k!
0 :: FATAL :: 16,0 ==> num_nodes != 2^k!
9 :: FATAL :: 16,0 ==> num_nodes != 2^k!
8 :: FATAL :: 16,0 ==> num_nodes != 2^k!
6 :: FATAL :: 16,0 ==> num_nodes != 2^k!
12 :: FATAL :: 16,0 ==> num_nodes != 2^k!
14 :: FATAL :: 16,0 ==> num_nodes != 2^k!
11 :: FATAL :: 16,0 ==> num_nodes != 2^k!
15 :: FATAL :: 16,0 ==> num_nodes != 2^k!
