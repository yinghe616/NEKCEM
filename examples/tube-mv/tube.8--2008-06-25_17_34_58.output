0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
0 :: WARNING :: sizeof(REAL) = 8
  WDSIZE: 8
0 :: WARNING :: sizeof(int) = 4
0 :: WARNING :: sizeof(REAL) = 8
 Number of Processors :: 32
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T

 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 DEBUG: moving window? movwin= 0
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 IFMOVW= T
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 IFMOVW= T
 IFMOVW= T
 IFMOVW= T
 DEBUG: moving window? movwin= 0

 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: moving window? movwin= 0
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: ifmovw= F lmov= 1
 DEBUG: moving window? movwin= 0
 DEBUG: ifmovw= F lmov= 1
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 IFMOVW= T
 DEBUG: ifmovw= F lmov= 1
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
  Beginning session:
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 IFMOVW= T
 DEBUG: calling moving window version of data read
 IFMOVW= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: moving window? movwin= 0
 IFMOVW= T
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
  /home/gcobb/nekcem/nekcem/examples/tube-mv/tube.rea                           
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: moving window? movwin= 0
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: moving window? movwin= 0
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: moving window? movwin= 0
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T

 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: calling moving window version of data read
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 DEBUG: READATW CALLED! ifmovw= T
 
 readat time :: 0.474588235299666650E-05  seconds
 DEBUG: ifmovw= F lmov= 1
 IFMOVW= T
 DEBUG: moving window? movwin= 0
 DEBUG: calling moving window version of data read
 DEBUG: READATW CALLED! ifmovw= T
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
  ERROR: Too many processors ( 32) for too few elements ( 18).
  ABORTING IN MAPELPR.
 7  normal exit.
 3  normal exit.
 19  normal exit.
 23  normal exit.
 22  normal exit.
 26  normal exit.
 25  normal exit.
 29  normal exit.
 13  normal exit.
 9  normal exit.
 24  normal exit.
 28  normal exit.
 12  normal exit.
 8  normal exit.
 10  normal exit.
 14  normal exit.
 30  normal exit.
 11  normal exit.
 15  normal exit.
 31  normal exit.
 27  normal exit.
 6  normal exit.
 2  normal exit.
 18  normal exit.
 21  normal exit.
 17  normal exit.
 1  normal exit.
 5  normal exit.
 20  normal exit.
 16  normal exit.
 4  normal exit.
 0  normal exit.
